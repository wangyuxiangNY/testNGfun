function(send, callback) 
{
	XMLHttpRequest.prototype.send = function(data) 
	{
		console.log('see data:' + data  );
		send.call(this, data);
	};
	callback();
})(XMLHttpRequest.prototype.send,arguments[arguments.length - 1]);
						







function(open, callback) 
{
       var ajaxURL;
       
       function onStateChange(event) 
       {
		   console.log('STATE HAS changed.' + this.readyState + '/' + this.status );
		    if (this.readyState === 4 && this.status == 200)
			{
		        console.log('AJAX IS DONE. see response:' + this.responseText);
						
				//" console.log('see event.data/target:' + event.data + '/' + event.target);"+ 
		        // fires on every readystatechange ever
		        // use `this` to determine which XHR object fired the change event
		        
		         setTimeout(function() 
		         {
		        	 console.log('2s wait is done.'); 
		          }, 2000);
		          
		     }
		}//onStateChange()
		        		    
		 
   		XMLHttpRequest.prototype.open = function(method, url, async, user, pass) 
   		{
   		    ajaxURL =  url;
   		    console.log('see ajax calls:' + url  );
    	    //console.log('WHY? url contains getTracks?' + url.indexOf('getTracks'));
   		    if (url.indexOf('getStreamUrl') >=0 )
   		    { 
    	       this.addEventListener('readystatechange', onStateChange);
    	    }
		
    	    open.call(this, method, url, async, user, pass);
	
		};
		
        callback();
 })(XMLHttpRequest.prototype.open,arguments[arguments.length - 1]);
        	
           	
           	
           	
           	
           	
           	
           	
          